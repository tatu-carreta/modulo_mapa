{% extends "master.twig" %}

{% block head %}
    {{ parent() }}

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAn5w3k9P2ISxdcfYba-sPxrGrz3W9-Jqk&sensor=false&libraries=places"></script>
    <script type="text/javascript">
        var map;
        var markers = [];
        var infowindow = new google.maps.InfoWindow({
            content: ""
        });
        function initialize() {
            var mapOptions = {
                center: new google.maps.LatLng(-34.92125, -57.95433329999997),
                zoom: 13,
            };
            map = new google.maps.Map(document.getElementById("map_canvas"),
                    mapOptions);

            google.maps.event.addListener(map, 'click', function (event) {
                deleteMarkers();
                var marker = new google.maps.Marker({
                    position: event.latLng,
                    map: map,
                    title: 'Dirección'
                });

                markers.push(marker);

                $("input[name='longitud']").val(event.latLng.lng());
                $("input[name='latitud']").val(event.latLng.lat());
                /*
                 $(".long").text(event.latLng.lng());
                 $(".lat").text(event.latLng.lat());
                 */

                //map.setCenter(event.latLng);

                bindInfoWindow(marker, map, infowindow, 'Holi');


                // alert('Point.X.Y: ' + event.latLng);
            });
            
            /*
             * 
             * AUTOCOMPLETE
             */

            // Create the search box and link it to the UI element.
            var input = /** @type {HTMLInputElement} */(
                    document.getElementById('pac-input'));
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            var searchBox = new google.maps.places.SearchBox(
                    /** @type {HTMLInputElement} */(input));


            // Listen for the event fired when the user selects an item from the
            // pick list. Retrieve the matching places for that item.
            google.maps.event.addListener(searchBox, 'places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }
                var bounds = new google.maps.LatLngBounds();
                for (var i = 0, place; place = places[i]; i++) {
                    map.setCenter(place.geometry.location);
                    

                    bounds.extend(place.geometry.location);
                }

                map.fitBounds(bounds);
                map.setZoom(13);
            });

            // Bias the SearchBox results towards places that are within the bounds of the
            // current map's viewport.
            google.maps.event.addListener(map, 'bounds_changed', function () {
                var bounds = map.getBounds();
                searchBox.setBounds(bounds);
            });
        }

        // Sets the map on all markers in the array.
        function setAllMap(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setAllMap(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setAllMap(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }

        function bindInfoWindow(marker, map, infowindow, strDescription) {
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.setContent(strDescription);
                infowindow.open(map, marker);
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
    <style>
        .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
    </style>
{% endblock %}

{% block contenido %}
    <section class="container">
        <div class="row titulo">
            <div class="col-md-4">
                <div class="tit2">DONDE COMPRAR - Mapa</div>
            </div>
            <div class="col-md-8">
                {% if(logueado) %}
                    {% include 'desplegar-menu.twig' %}
                {% endif %}
            </div>
        </div>
        <form id="agregar-local" method="post" action="{{ paths.PATH_CONTROLLER }}controladorAdminModel.php">
            <div class="row">
                <div class="col-md-4">
                    <div class="listado">
                        <h4>Nuevo local</h4>
                    </div>
                    <!-- Abre columna de descripción -->

                    <div class="listado">
                        <div class="form-group">
                            <input class="form-control" type="text" name="nombre" placeholder="Nombre del local" required="true">
                        </div>
                        <div class="form-group">
                            <input class="form-control" type="text" name="direccion" placeholder="Dirección y localidad" required="true">
                        </div>
                    </div>
                    <div class="botones-dondecomprar">
                        <input type="submit"  value ="Guardar" class="btn btn-primary"></input>
                        <input type="submit"  value ="Cancelar" class="btn btn-default"></input>
                    </div>

                    <h5 class="lista">Cómo agregar:</h5>
                    <ul class="como-agregar">
                        <li>1) busque en el mapa la ubicación del local</li>
                        <li>2) ingrese nombre y dirección</li>
                        <li>3) guarde</li>
                    </ul>   

                </div>
                <div class="col-md-8">
                    <input id="pac-input" class="controls" type="text" placeholder="Buscar">
                        <div class="mapa-locales" id="map_canvas" ></div>
                </div>
            </div>            
            <!-- cierran columnas -->

            <div>
                <input type="hidden" name="latitud">
                <input type="hidden" name="longitud">
                <input type="hidden" name="section" value="agregar-local">
                <input type="submit" value="Publicar">
                <a onclick="window.history.back();">Cancelar</a>
            </div>
        </form>
    </section>
{% endblock %}