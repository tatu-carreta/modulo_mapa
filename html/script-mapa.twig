<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAn5w3k9P2ISxdcfYba-sPxrGrz3W9-Jqk&sensor=false&libraries=places,geometry"></script>
<script type="text/javascript">
    //locales traidos de la bd
    var locales = {{ locales|json_encode()|raw }};
    var map;
    //markers total de locales del mapa
    var markers = [];
    //solo los que se muestran en el listado del costado
    var listadoLocales = [];
    //el popup por default del marcador
    var infowindow = new google.maps.InfoWindow({
        content: ""
    });
    var bounceTimer;
    /**
     * The CenterControl adds a control to the map that recenters the map on Chicago.
     * This constructor takes the control DIV as an argument.
     * @constructor
     */
    function CenterControl(controlDiv, map) {

        // Set CSS for the control border
        var controlUI = document.createElement('div');
        controlUI.style.backgroundColor = '#fff';
        controlUI.style.border = '2px solid #fff';
        controlUI.style.borderRadius = '3px';
        controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
        controlUI.style.cursor = 'pointer';
        controlUI.style.marginBottom = '22px';
        controlUI.style.textAlign = 'center';
        controlUI.title = 'Click to recenter the map';
        controlDiv.appendChild(controlUI);

        // Set CSS for the control interior
        var controlText = document.createElement('div');
        controlText.style.color = 'rgb(25,25,25)';
        controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
        controlText.style.fontSize = '16px';
        controlText.style.lineHeight = '38px';
        controlText.style.paddingLeft = '5px';
        controlText.style.paddingRight = '5px';
        controlText.innerHTML = 'Geolocation';
        controlUI.appendChild(controlText);

        // Setup the click event listeners: simply set the map to
        // Chicago
        google.maps.event.addDomListener(controlUI, 'click', function () {
            // Try HTML5 geolocation
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var miPosicion = new google.maps.LatLng(position.coords.latitude,
                            position.coords.longitude);

                    map.setCenter(miPosicion);
                    
                    $(".listado-locales").html("");
                    cargarLocales();
                }, function () {
                    handleNoGeolocation(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }
            //map.setCenter(chicago)
        });

    }

    function initialize() {

        //inicializacion del mapa en La Plata
        var mapOptions = {
            center: new google.maps.LatLng(-34.7351809, -58.33506779999999),
            zoom: 13,
        };
        map = new google.maps.Map(document.getElementById("map_canvas"),
                mapOptions);


        cargarLocales();

        // Create the DIV to hold the control and
        // call the CenterControl() constructor passing
        // in this DIV.
        var centerControlDiv = document.createElement('div');
        var centerControl = new CenterControl(centerControlDiv, map);

        centerControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(centerControlDiv);


        /*
         * 
         * AUTOCOMPLETE
         */

        // Create the search box and link it to the UI element.
        var input = /** @type {HTMLInputElement} */(
                document.getElementById('pac-input'));
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var searchBox = new google.maps.places.SearchBox(
                /** @type {HTMLInputElement} */(input));


        // Listen for the event fired when the user selects an item from the
        // pick list. Retrieve the matching places for that item.
        google.maps.event.addListener(searchBox, 'places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                map.setCenter(place.geometry.location);


                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
            map.setZoom(13);
            $(".listado-locales").html("");
            cargarLocales();
        });

        // Bias the SearchBox results towards places that are within the bounds of the
        // current map's viewport.
        google.maps.event.addListener(map, 'bounds_changed', function () {
            var bounds = map.getBounds();
            searchBox.setBounds(bounds);


        });


    }

    // Sets the map on all markers in the array.
    function setAllMap(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
        setAllMap(null);
    }

    // Shows any markers currently in the array.
    function showMarkers() {
        setAllMap(map);
    }

    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

    // Deletes all markers in the array by removing references to them.
    function deleteListadoLocales() {
        listadoLocales = [];
    }

    function bindInfoWindow(marker, map, infowindow, strDescription) {
        google.maps.event.addListener(marker, 'click', function () {
            //marker.setIcon("https://www.google.com/mapfiles/marker_green.png");
            infowindow.setContent(strDescription);
            infowindow.open(map, marker);
        });
    }

    function cargarLocales() {
        //deleteMarkers();
        deleteListadoLocales();

        $.each(locales, function (i, data) {
            var latLng = new google.maps.LatLng(data.latitud, data.longitud);


            // Creating a marker and putting it on the map
            var marker = new google.maps.Marker({
                position: latLng,
                map: map,
                title: data.nombre,
                
            });
            markers.push(marker);
            {% if(not logueado) %}
                data.descripcion = "<div class='listado-locales box-local-mapa'><p><strong>" + data.nombre + "</strong><br>" + data.direccion + "</p></div>";
            {% else %}
                data.descripcion = "<div class='listado-locales box-local-mapa'><p><strong>" + data.nombre + "</strong><br>" + data.direccion + "</p>\n\
                                    <div class='botones'>\n\
                                    <form action='{{paths.PATH_CONTROLLER}}controladorAdmin.php?seccion=editar-local' method='post'>\n\
                                        <input type='hidden' name='local' value='" + data.id + "'><input type='submit' value='Editar' class='btn btn-primary'></form>\n\
                                    <form id='form-borrar-local-" + data.id + "' method='post' action='{{paths.PATH_CONTROLLER}}controladorAdminModel.php' >\n\
                                        <input type='hidden' name='section' value='borrar-local'>\n\
                                        <input type='hidden' name='local' value='" + data.id + "'><input onclick='borrarLocal(" + data.id + ")' type='button' value='Borrar' class='btn btn-default'></form></div></div>";
            {% endif %}
                bindInfoWindow(marker, map, infowindow, data.descripcion);

                if (google.maps.geometry.spherical.computeDistanceBetween(latLng, map.getCenter(), 1000) <= 1) {
                    data.marker = marker;
                    listadoLocales.push(data);
                }
            });

            mostrarListadoLocales();
        }

        function moverMarker(i){
            var marker = listadoLocales[i].marker;
            //alert(marker);
            
            if (marker.getAnimation() == null || typeof marker.getAnimation() === 'undefined') {

                /* 
                Because of the google maps bug of moving cursor several times over and out of marker
                causes bounce animation to break - we use small timer before triggering the bounce animation
                */

                clearTimeout(bounceTimer);

                var that = marker;

                bounceTimer = setTimeout(function(){
                     that.setAnimation(google.maps.Animation.BOUNCE);
                },
                100);

            }
        }
        
        function dejarMoverMarker(i)
        {
            var marker = listadoLocales[i].marker;
            //alert(marker);
            if (marker.getAnimation() != null) {
                marker.setAnimation(null);
            }

            // If we already left marker, no need to bounce when timer is ready
            clearTimeout(bounceTimer);
        }

        function mostrarListadoLocales() {
            if (listadoLocales.length > 0)
            {
                $.each(listadoLocales, function (i, data)
                {
                    {% if(not logueado) %}
                        $(".listado-locales").append("<li onmouseover='moverMarker("+i+")' onmouseout='dejarMoverMarker("+i+")'><p><strong>" + data.nombre + "</strong><br>" + data.direccion + "</p></li>");
                    {% else %}
                        $(".listado-locales").append("<li onmouseover='moverMarker("+i+")' onmouseout='dejarMoverMarker("+i+")'><p><strong>"+data.nombre+"</strong><br>"+data.direccion+"</p>\n\
                                    <div class='botones'>\n\
                                    <form action='{{paths.PATH_CONTROLLER}}controladorAdmin.php?seccion=editar-local' method='post'>\n\
                                        <input type='hidden' name='local' value='"+data.id+"'><input type='submit' value='Editar' class='btn btn-primary'></form>\n\
                                    <form id='form-borrar-local-"+data.id+"' method='post' action='{{paths.PATH_CONTROLLER}}controladorAdminModel.php' >\n\
                                        <input type='hidden' name='section' value='borrar-local'>\n\
                                        <input type='hidden' name='local' value='"+data.id+"'><input onclick='borrarLocal("+data.id+")' type='button' value='Borrar' class='btn btn-default'></form></div></li>");
                    {% endif %}
                });
            } else {
                $(".listado-locales").append("<p>Lo sentimos, <br>no pudimos encontrar ningún local en el área seleccionada.</p>");
            }
        }
        google.maps.event.addDomListener(window, 'load', initialize);
</script>

<style>
        .controls {
            margin-top: 16px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color: #fff;
            background-color: #4d90fe;
            padding: 5px 11px 0px 11px;
        }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
    </style>